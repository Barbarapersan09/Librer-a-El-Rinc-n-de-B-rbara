-- MySQL Script generated by MySQL Workbench
-- Wed Oct 25 10:57:29 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Biblioteca
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Biblioteca` ;

-- -----------------------------------------------------
-- Schema Biblioteca
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Biblioteca` DEFAULT CHARACTER SET utf8 ;
USE `Biblioteca` ;

-- -----------------------------------------------------
-- Table `Biblioteca`.`Editorial`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`Editorial` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`Editorial` (
  `idEditorial` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(100) NOT NULL,
  `Direccion` VARCHAR(400) NOT NULL,
  `Telefono` INT(9)  NULL,
  `web` VARCHAR(45) NULL,
  PRIMARY KEY (`idEditorial`))
ENGINE = InnoDB
COMMENT = 'Un libro solo puede ser de una editorial.\nPor eso es 1: n';


-- -----------------------------------------------------
-- Table `Biblioteca`.`Libros`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`Libros` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`Libros` (
  `idLibros` INT NOT NULL AUTO_INCREMENT,
  `ISBN` VARCHAR(13) NOT NULL,
  `Titulo` VARCHAR(200) NOT NULL,
  `Tema` VARCHAR(100) NOT NULL,
  `Páginas` INT NOT NULL,
  `Formato` VARCHAR(45) NOT NULL,
  `Idioma` VARCHAR(45) NOT NULL,
  `Fecha_publicación` DATE NOT NULL,
  `Precio` DOUBLE NOT NULL,
  `Descripcion` VARCHAR(200) NOT NULL,
  `Editorial_idEditorial` INT NOT NULL,
  PRIMARY KEY (`idLibros`),
  INDEX `fk_Libros_Editorial_idx` (`Editorial_idEditorial` ASC),
  CONSTRAINT `fk_Libros_Editorial`
    FOREIGN KEY (`Editorial_idEditorial`)
    REFERENCES `Biblioteca`.`Editorial` (`idEditorial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`Temas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`Temas` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`Temas` (
  `idTemas` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`idTemas`),
  UNIQUE INDEX `idTemas_UNIQUE` (`idTemas` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`Autores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`Autores` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`Autores` (
  `idAutor` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(100) NOT NULL,
  `Apellido` VARCHAR(200) NOT NULL,
  `Edad` INT(3) NULL,
  `Nacionalidad` VARCHAR(45) NULL,
  `Biografia` VARCHAR(200) NULL,
  PRIMARY KEY (`idAutor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`Ejemplar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`Ejemplar` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`Ejemplar` (
  `idEjemplar` INT NOT NULL AUTO_INCREMENT,
  `Num_ejemplar` INT(5) NOT NULL,
  `Disponibilidad` TINYINT NOT NULL,
  `Libros_idLibros` INT NOT NULL,
  PRIMARY KEY (`idEjemplar`),
  INDEX `fk_Ejemplar_Libros1_idx` (`Libros_idLibros` ASC),
  CONSTRAINT `fk_Ejemplar_Libros1`
    FOREIGN KEY (`Libros_idLibros`)
    REFERENCES `Biblioteca`.`Libros` (`idLibros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Un ejemplar esta relacionado con un solo libro pero un libro puede tener muchos ejemplares. Por eso es 1: n';


-- -----------------------------------------------------
-- Table `Biblioteca`.`CLiente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`CLiente` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`CLiente` (
  `idCliente` INT NOT NULL,
  `Nombre` VARCHAR(100) NOT NULL,
  `Apellidos` VARCHAR(250) NOT NULL,
  `Direccion` VARCHAR(400) NOT NULL,
  `DNI` VARCHAR(9) NOT NULL,
  `Telefono` INT NOT NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB
COMMENT = 'Un cliente puede realizar muchas compras pero cada compra esta asciada a un cliente. Por eso es 1: n';


-- -----------------------------------------------------
-- Table `Biblioteca`.`Escrito_por`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`Escrito_por` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`Escrito_por` (
  `Libros_idLibros` INT NOT NULL,
  `Autor_idAutor` INT NOT NULL,
  PRIMARY KEY (`Libros_idLibros`, `Autor_idAutor`),
  INDEX `fk_Libros_has_Autor_Autor1_idx` (`Autor_idAutor` ASC),
  INDEX `fk_Libros_has_Autor_Libros1_idx` (`Libros_idLibros` ASC),
  CONSTRAINT `fk_Libros_has_Autor_Libros1`
    FOREIGN KEY (`Libros_idLibros`)
    REFERENCES `Biblioteca`.`Libros` (`idLibros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Libros_has_Autor_Autor1`
    FOREIGN KEY (`Autor_idAutor`)
    REFERENCES `Biblioteca`.`Autores` (`idAutor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Un libro puede estar escrito por uno o muchos autores y uno o muchos autores pueden haber escrito uno o muchos libros. Por eso es n: m ';


-- -----------------------------------------------------
-- Table `Biblioteca`.`Compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`Compra` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`Compra` (
  `idCompra` INT NOT NULL AUTO_INCREMENT,
  `Fecha` DATE NOT NULL,
  `Precio` DOUBLE NOT NULL,
  `Metodo_pago` VARCHAR(45) NOT NULL,
  `idCliente` INT NOT NULL,
  `Libros_idLibros` INT NOT NULL,
  `CLiente_idCliente` INT NOT NULL,
  PRIMARY KEY (`idCompra`, `Libros_idLibros`, `CLiente_idCliente`),
  INDEX `fk_Compra_cliente_idx` (`idCliente` ASC),
  INDEX `fk_Compra_Libros1_idx` (`Libros_idLibros` ASC),
  INDEX `fk_Compra_CLiente1_idx` (`CLiente_idCliente` ASC),
  CONSTRAINT `fk_Compra_cliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `Biblioteca`.`CLiente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Compra_Libros1`
    FOREIGN KEY (`Libros_idLibros`)
    REFERENCES `Biblioteca`.`Libros` (`idLibros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Compra_CLiente1`
    FOREIGN KEY (`CLiente_idCliente`)
    REFERENCES `Biblioteca`.`CLiente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Una compra esta relacionada con uno o muchos libros y una compra esta relacionada con un solo cliente.Por eso es 1: n y 1: 1';


-- -----------------------------------------------------
-- Table `Biblioteca`.`Trata_de`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Biblioteca`.`Trata_de` ;

CREATE TABLE IF NOT EXISTS `Biblioteca`.`Trata_de` (
  `Libros_idLibros` INT NOT NULL,
  `Temas_idTemas` INT NOT NULL,
  PRIMARY KEY (`Libros_idLibros`, `Temas_idTemas`),
  INDEX `fk_Libros_has_Temas_Temas2_idx` (`Temas_idTemas` ASC),
  INDEX `fk_Libros_has_Temas_Libros1_idx` (`Libros_idLibros` ASC),
  CONSTRAINT `fk_Libros_has_Temas_Libros1`
    FOREIGN KEY (`Libros_idLibros`)
    REFERENCES `Biblioteca`.`Libros` (`idLibros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Libros_has_Temas_Temas2`
    FOREIGN KEY (`Temas_idTemas`)
    REFERENCES `Biblioteca`.`Temas` (`idTemas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Un libro puede tratar de uno o varios temas y uno o varios temas puede tratar un libro.Por eso es n: m';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
